// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlayerInput should always match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayerInput
    errorMessage={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <td>
          <input
                    name="undefinedFirstName"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="First Name"
                    type="text"
                    value=""
          />
</td>,
        <td>
          <input
                    name="undefinedLastName"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Last Name"
                    type="text"
                    value=""
          />
</td>,
        <td>
          <input
                    className="attr"
                    name="undefinedSpeed"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="number"
                    value={0}
          />
</td>,
        <td>
          <input
                    className="attr"
                    name="undefinedStrength"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="number"
                    value={0}
          />
</td>,
        <td>
          <input
                    className="attr"
                    name="undefinedAgility"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="number"
                    value={0}
          />
</td>,
        <td />,
        <td>
          <div
                    className="errorMessage"
          >
                    <div
                              className="tooltip"
                    >
                              <img
                                        alt="Error Icon"
                                        src="/warning.svg"
                              />
                              <span
                                        className="tooltiptext"
                              >
                                        <h5>
                                                  Errors!
                                        </h5>
                                        <ul>
                                                  
                                        </ul>
                              </span>
                    </div>
          </div>
</td>,
      ],
      "className": "playerInput clean",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            name="undefinedFirstName"
            onBlur={[Function]}
            onChange={[Function]}
            placeholder="First Name"
            type="text"
            value=""
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "undefinedFirstName",
            "onBlur": [Function],
            "onChange": [Function],
            "placeholder": "First Name",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            name="undefinedLastName"
            onBlur={[Function]}
            onChange={[Function]}
            placeholder="Last Name"
            type="text"
            value=""
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "undefinedLastName",
            "onBlur": [Function],
            "onChange": [Function],
            "placeholder": "Last Name",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            className="attr"
            name="undefinedSpeed"
            onBlur={[Function]}
            onChange={[Function]}
            type="number"
            value={0}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "attr",
            "name": "undefinedSpeed",
            "onBlur": [Function],
            "onChange": [Function],
            "type": "number",
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            className="attr"
            name="undefinedStrength"
            onBlur={[Function]}
            onChange={[Function]}
            type="number"
            value={0}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "attr",
            "name": "undefinedStrength",
            "onBlur": [Function],
            "onChange": [Function],
            "type": "number",
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            className="attr"
            name="undefinedAgility"
            onBlur={[Function]}
            onChange={[Function]}
            type="number"
            value={0}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "attr",
            "name": "undefinedAgility",
            "onBlur": [Function],
            "onChange": [Function],
            "type": "number",
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 0,
        },
        "ref": null,
        "rendered": 0,
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="errorMessage"
>
            <div
                        className="tooltip"
            >
                        <img
                                    alt="Error Icon"
                                    src="/warning.svg"
                        />
                        <span
                                    className="tooltiptext"
                        >
                                    <h5>
                                                Errors!
                                    </h5>
                                    <ul>
                                                
                                    </ul>
                        </span>
            </div>
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="tooltip"
>
              <img
                            alt="Error Icon"
                            src="/warning.svg"
              />
              <span
                            className="tooltiptext"
              >
                            <h5>
                                          Errors!
                            </h5>
                            <ul>
                                          
                            </ul>
              </span>
</div>,
            "className": "errorMessage",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="Error Icon"
                  src="/warning.svg"
/>,
                <span
                  className="tooltiptext"
>
                  <h5>
                                    Errors!
                  </h5>
                  <ul>
                                    
                  </ul>
</span>,
              ],
              "className": "tooltip",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Error Icon",
                  "src": "/warning.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h5>
                      Errors!
</h5>,
                    <ul>
                      
</ul>,
                  ],
                  "className": "tooltiptext",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Errors!",
                    },
                    "ref": null,
                    "rendered": "Errors!",
                    "type": "h5",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [],
                    },
                    "ref": null,
                    "rendered": Array [],
                    "type": "ul",
                  },
                ],
                "type": "span",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "td",
      },
    ],
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <td>
            <input
                        name="undefinedFirstName"
                        onBlur={[Function]}
                        onChange={[Function]}
                        placeholder="First Name"
                        type="text"
                        value=""
            />
</td>,
          <td>
            <input
                        name="undefinedLastName"
                        onBlur={[Function]}
                        onChange={[Function]}
                        placeholder="Last Name"
                        type="text"
                        value=""
            />
</td>,
          <td>
            <input
                        className="attr"
                        name="undefinedSpeed"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="number"
                        value={0}
            />
</td>,
          <td>
            <input
                        className="attr"
                        name="undefinedStrength"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="number"
                        value={0}
            />
</td>,
          <td>
            <input
                        className="attr"
                        name="undefinedAgility"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="number"
                        value={0}
            />
</td>,
          <td />,
          <td>
            <div
                        className="errorMessage"
            >
                        <div
                                    className="tooltip"
                        >
                                    <img
                                                alt="Error Icon"
                                                src="/warning.svg"
                                    />
                                    <span
                                                className="tooltiptext"
                                    >
                                                <h5>
                                                            Errors!
                                                </h5>
                                                <ul>
                                                            
                                                </ul>
                                    </span>
                        </div>
            </div>
</td>,
        ],
        "className": "playerInput clean",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              name="undefinedFirstName"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="First Name"
              type="text"
              value=""
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "undefinedFirstName",
              "onBlur": [Function],
              "onChange": [Function],
              "placeholder": "First Name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              name="undefinedLastName"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="Last Name"
              type="text"
              value=""
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "undefinedLastName",
              "onBlur": [Function],
              "onChange": [Function],
              "placeholder": "Last Name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="attr"
              name="undefinedSpeed"
              onBlur={[Function]}
              onChange={[Function]}
              type="number"
              value={0}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "attr",
              "name": "undefinedSpeed",
              "onBlur": [Function],
              "onChange": [Function],
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="attr"
              name="undefinedStrength"
              onBlur={[Function]}
              onChange={[Function]}
              type="number"
              value={0}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "attr",
              "name": "undefinedStrength",
              "onBlur": [Function],
              "onChange": [Function],
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="attr"
              name="undefinedAgility"
              onBlur={[Function]}
              onChange={[Function]}
              type="number"
              value={0}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "attr",
              "name": "undefinedAgility",
              "onBlur": [Function],
              "onChange": [Function],
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 0,
          },
          "ref": null,
          "rendered": 0,
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="errorMessage"
>
              <div
                            className="tooltip"
              >
                            <img
                                          alt="Error Icon"
                                          src="/warning.svg"
                            />
                            <span
                                          className="tooltiptext"
                            >
                                          <h5>
                                                        Errors!
                                          </h5>
                                          <ul>
                                                        
                                          </ul>
                            </span>
              </div>
</div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="tooltip"
>
                <img
                                alt="Error Icon"
                                src="/warning.svg"
                />
                <span
                                className="tooltiptext"
                >
                                <h5>
                                                Errors!
                                </h5>
                                <ul>
                                                
                                </ul>
                </span>
</div>,
              "className": "errorMessage",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt="Error Icon"
                    src="/warning.svg"
/>,
                  <span
                    className="tooltiptext"
>
                    <h5>
                                        Errors!
                    </h5>
                    <ul>
                                        
                    </ul>
</span>,
                ],
                "className": "tooltip",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "Error Icon",
                    "src": "/warning.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h5>
                        Errors!
</h5>,
                      <ul>
                        
</ul>,
                    ],
                    "className": "tooltiptext",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Errors!",
                      },
                      "ref": null,
                      "rendered": "Errors!",
                      "type": "h5",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [],
                      },
                      "ref": null,
                      "rendered": Array [],
                      "type": "ul",
                    },
                  ],
                  "type": "span",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "td",
        },
      ],
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
